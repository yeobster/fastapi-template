name: dev-fastapi-api
on:
  push:
    branches: [ dev ]

env:
  VERSION: 'latest'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dev-fastapi-api
          IMAGE_TAG: ${{ env.VERSION }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "{name}={value}" >> $GITHUB_OUTPUT

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, dev-fastapi-api ]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy FastApi DevServer(dev)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dev-fastapi-api
        run: |
          cd ~/dev-fastapi-api
          /usr/bin/docker rm $ECR_REPOSITORY --force
          /usr/bin/docker rmi $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.VERSION }}
          /usr/bin/docker pull $ECR_REGISTRY/$ECR_REPOSITORY
          sudo nohup /usr/bin/docker run -d -p 8888:80 --name $ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY > nohup.out 2>&1 &